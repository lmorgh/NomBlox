PoopMaster:
  type: world
  events:
#################################################################################################
#                                                                                               #
#                                           COW                                                 #
#                                                                                               #
#################################################################################################
    on player right clicks Cow with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The cow dropped some <red>Cow Poop<dark_aqua>!"
      - give player i@CowPoop qty:1
    } 
    on player right clicks grass with CowPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - if !<context.location.add[0,1,0]>
    - flag player PoopInAction
    - take i@CowPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[cow]> flag player HasPooped:->:cow
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> red_rose,2
    - narrate "<dark_aqua>It's a flower!"
    - flag player PoopInAction:!
    
#################################################################################################
#                                                                                               #
#                                           CHICKEN                                             #
#                                                                                               #
#################################################################################################    
    on player right clicks Chicken with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The chicken dropped some <red>Chicken Poop<dark_aqua>!"
      - give player i@ChickenPoop qty:1
    }
    on player right clicks grass with ChickenPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@ChickenPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[chicken]> flag player HasPooped:->:chicken
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - random
    {
      - modifyblock <context.location.add[0,1,0]> red_rose
      - modifyblock <context.location.add[0,1,0]> yellow_flower
    }
    - narrate "<dark_aqua>It's a flower!"
    - flag player PoopInAction:!
    
#################################################################################################
#                                                                                               #
#                                           RABBIT                                              #
#                                                                                               #
#################################################################################################    
    on player right clicks Rabbit with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The rabbit dropped some <red>Rabbit Poop<dark_aqua>!"
      - give player i@RabbitPoop qty:1
    }
    on player right clicks grass with RabbitPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@RabbitPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[rabbit]> flag player HasPooped:->:rabbit
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - random
    {
      - modifyblock <context.location.add[0,1,0]> red_rose,4
      - modifyblock <context.location.add[0,1,0]> red_rose,5
      - modifyblock <context.location.add[0,1,0]> red_rose,6
      - modifyblock <context.location.add[0,1,0]> red_rose,7
    }
    - narrate "<dark_aqua>It's a flower!"
    - flag player PoopInAction:!
    
#################################################################################################
#                                                                                               #
#                                           PIG                                                 #
#                                                                                               #
#################################################################################################    
    on player right clicks Pig with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The pig dropped some <red>Pig Poop<dark_aqua>!"
      - give player i@PigPoop qty:1
    }
    on player right clicks grass with PigPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@PigPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[pig]> flag player HasPooped:->:pig
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> red_rose,1
    - narrate "<dark_aqua>It's a flower!"
    - flag player PoopInAction:!
    
#################################################################################################
#                                                                                               #
#                                           SHEEP                                               #
#                                                                                               #
#################################################################################################    
    on player right clicks Sheep with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The sheep dropped some <red>Sheep Poop<dark_aqua>!"
      - give player i@SheepPoop qty:1
    }
    on player right clicks grass with SheepPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@SheepPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[sheep]> flag player HasPooped:->:sheep
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> red_rose,3
    - narrate "<dark_aqua>It's a flower!"
    - flag player PoopInAction:!
    
#################################################################################################
#                                                                                               #
#                                           HORSE                                               #
#                                                                                               #
#################################################################################################    
    on player right clicks Horse with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The horse dropped some <red>Horse Poop<dark_aqua>!"
      - give player i@HorsePoop qty:1
    }
    on player right clicks grass with HorsePoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@HorsePoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[horse]> flag player HasPooped:->:horse
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> red_rose,8
    - narrate "<dark_aqua>It's a flower!"
    - flag player PoopInAction:!
    
#################################################################################################
#                                                                                               #
#                                           MOOSHROOM                                           #
#                                                                                               #
#################################################################################################    
    on player right clicks Mushroom_cow with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[5]> == 1
    {
      - narrate "<dark_aqua>The mooshroom dropped some <red>Mooshroom Poop<dark_aqua>!"
      - give player i@MooshroomPoop qty:1
    }
    on player right clicks grass with MooshroomPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@MooshroomPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[mooshroom]> flag player HasPooped:->:mooshroom
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - random
    {
      - modifyblock <context.location.add[0,1,0]> red_mushroom
      - modifyblock <context.location.add[0,1,0]> brown_mushroom
    }
    - narrate "<dark_aqua>It's a mushroom!"
    - flag player PoopInAction:!
  
    on player right clicks mycel with MooshroomPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@MooshroomPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[mooshroom]> flag player HasPooped:->:mooshroom
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 105,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,3
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,4
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 105,5
    - wait 7t
    - random
    {
      - modifyblock <context.location.add[0,1,0]> red_mushroom
      - modifyblock <context.location.add[0,1,0]> brown_mushroom
    }
    - narrate "<dark_aqua>It's a mushroom!"
    - flag player PoopInAction:!
    
    # on melon_stem fades:
    # - narrate <context.location>
    # - determine cancelled
    
    # on player breaks melon_stem:
    # - narrate <context.location>
    # - determine cancelled
    
#################################################################################################
#                                                                                               #
#                                         ZOMBIE PIGMAN                                         #
#                                                                                               #
################################################################################################# 
    on player right clicks Pig_zombie with RottenApple:
    - take i@rottenapple
    - if <util.random.int[1].to[10]> == 1
    {
      - narrate "<dark_aqua>The zombie pigman dropped some <red>Pigman Poop<dark_aqua>!"
      - give player i@PigmanPoop qty:1
    }
    on player right clicks soul_sand with PigmanPoop:
    - if <player.has_flag[PoopInAction]> determine cancelled
    - if <context.location.add[0,1,0].material> != m@air determine cancelled
    - flag player PoopInAction
    - take i@PigmanPoop
    - if <player.has_flag[Pehta_herbalism_Q2]> && !<player.flag[HasPooped].as_list.contains[mooshroom]> flag player HasPooped:->:mooshroom
    - narrate "<dark_aqua>Something is happening..."
    - wait 2
    - modifyblock <context.location.add[0,1,0]> 115,0
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 115,1
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 115,2
    - wait 7t
    - modifyblock <context.location.add[0,1,0]> 115,3
    - wait 7t
    - narrate "<dark_aqua>It's a nether wart!"
    - flag player PoopInAction:!

  # 115,0
  # 115,1
  # 115,2
  # 115,3
  
  
#################################################################################################
#                                                                                               #
#                                           ROTTEN APPLE                                        #
#                                                                                               #
#################################################################################################   
RottenApple:
  type: item
  material: apple
  display name: <red>Rotten Apple
  lore:
  - <white>It's rotten. Only an animal could eat it.
  - <red>Poison (0<&co>10)
  recipe: 
  - i@rotten_flesh
  - i@rotten_flesh
  - i@rotten_flesh
  - i@rotten_flesh
  - i@apple
  - i@rotten_flesh
  - i@rotten_flesh
  - i@rotten_flesh
  - i@rotten_flesh
  
RottenAppleEffect:
  type: world
  events:
    on player consumes RottenApple:
    - cast poison d:10 p:1
    
#################################################################################################
#                                                                                               #
#                                           POOPS                                               #
#                                                                                               #
#################################################################################################  
RabbitPoop:
  type: item
  material: melon_seeds
  display name: Rabbit Poop
  lore:
  - <dark_red>Ewww.
  
CowPoop:
  type: item
  material: rotten_flesh
  display name: Cow Poop
  lore:
  - <dark_red>Ewww.
  
PigPoop:
  type: item
  material: charcoal
  display name: Pig Poop
  lore:
  - <dark_red>Ewww.
  
SheepPoop:
  type: item
  material: cocoa_beans
  display name: Sheep Poop
  lore:
  - <dark_red>Ewww.
  
ChickenPoop:
  type: item
  material: clay_ball
  display name: Chicken Poop
  lore:
  - <dark_red>Ewww.
  
HorsePoop:
  type: item
  material: fireball
  display name: Horse Poop
  lore:
  - <dark_red>Ewww.
  
MooshroomPoop:
  type: item
  material: rotten_flesh
  display name: Mooshroom Poop
  lore:
  - <dark_red>Ewww.
  
PigmanPoop:
  type: item
  material: charcoal
  display name: Pigman Poop
  lore:
  - <dark_red>Ewww.
  